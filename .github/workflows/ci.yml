name: Build and Test

on:
  push:
    branches:
      - '**'  
  pull_request:
    branches:
      - '**'  

jobs:
  server-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Server Dependencies
        working-directory: server
        run: npm install

      - name: Run Server Unit Tests
        working-directory: server
        run: npm run test

      - name: Run e2e Tests
        working-directory: server
        run: npm run e2e-tests

  client-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: client
        run: npm ci

      - name: Run Client Unit Tests
        working-directory: client
        run: npm run test

      - name: Install Playwright Browsers
        working-directory: client
        run: npx playwright install chromium --with-deps

      - name: Run Browser tests
        working-directory: client
        run: npm run integration-tests 

  deploy:
    runs-on: ubuntu-latest
    needs: [client-tests, server-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.HETZNER_SSH_KEY }}

      - name: Copy files via SSH (excluding .env and .log files from deletion)
        run: |
          rsync -avz --delete \
            --exclude='*.env' \
            --exclude='*.log' \
            --exclude='server/dist' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_HOST }}:${{ secrets.DEPLOY_PATH }}

      - name: Install & Restart app
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
          # Install dependencies and build the project
          npm install
          npm run build

          # Navigate to the server directory
          cd server

          # Stop the PM2-managed app
          npm run pm2-stop

          # Reset any stuck jobs in the database
          npm run reset-stuck-jobs

          # Start the PM2-managed app again
          npm run pm2-stub
          EOF